package io.slychat.messenger.core;

import java.net.InetSocketAddress;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

import io.slychat.messenger.core.sentry.DSN;

public class BuildConfig {
    public static class ServerUrls {
        public final String API_SERVER;
        public final InetSocketAddress RELAY_SERVER;

        public ServerUrls(final String apiServer, final InetSocketAddress relayServer) {
            this.API_SERVER = apiServer;
            this.RELAY_SERVER = relayServer;
        }
    }

    public enum UIServiceType {
        DUMMY,
        REAL
    }

    public enum UIServiceComponent {
       #foreach($type in $componentEnumTypes)
       $type#if($foreach.hasNext),#end
       #end
    }

    public static class UIServiceMap {
        private UIServiceMap() {}

        public @NotNull UIServiceType get(@NotNull UIServiceComponent uiServiceComponent) {
            switch (uiServiceComponent) {
                #foreach($entry in $componentTypes)
                case $entry.key:
                    return UIServiceType.$entry.value;
                #end
                default:
                    throw new IllegalStateException("Invalid UIServiceComponent");
            }
        }
    }

    private BuildConfig() {}

    public static final boolean DEBUG = $debug;
    public static final String VERSION = "$version";

    public static final boolean ENABLE_DATABASE_ENCRYPTION = $enableDatabaseEncryption;

    public static final boolean DISABLE_CERTIFICATE_VERIFICATION = $disableCertificateVerification;
    public static final boolean DISABLE_HOST_VERIFICATION = $disableHostVerification;

    public static final ServerUrls DESKTOP_SERVER_URLS = new ServerUrls("$desktopHttpApiServer", $desktopRelayServer);
    public static final ServerUrls ANDROID_SERVER_URLS = new ServerUrls("$androidHttpApiServer", $androidRelayServer);

    public static final UIServiceMap UI_SERVICE_MAP = new UIServiceMap();

    public static final long relayKeepAliveIntervalMs = $relayKeepAliveIntervalMs;

    @Nullable
    public static final DSN sentryDsn = $sentryDsn;
}
