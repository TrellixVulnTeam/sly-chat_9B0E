buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
    }
}

apply plugin: 'kotlin'

sourceCompatibility = JavaVersion.VERSION_1_7

test {
    systemProperties['keytap.tests.doOnline'] = System.getProperty('keytap.tests.doOnline')
}

sourceSets {
    integrationTest {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestCompile.extendsFrom testRuntime
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
    group = 'verification'
}

integrationTest {
    testLogging {
        showStandardStreams = true
    }
}


integrationTest.mustRunAfter test

tasks.withType(Test) {
    reports.html.destination = file("$reporting.baseDir/$name")
}

dependencies {
    compile "nl.komponents.kovenant:kovenant-core:$versions.kovenant"
    compile "nl.komponents.kovenant:kovenant-functional:$versions.kovenant"
    compile "org.whispersystems:signal-protocol-java:$versions.libsignal"
    compile "joda-time:joda-time:$versions.jodaTime"
    compile "com.fasterxml.jackson.core:jackson-annotations:$versions.jackson"
    compile "com.fasterxml.jackson.core:jackson-databind:$versions.jackson"
    compile "com.madgag.spongycastle:core:$versions.spongycastle"
    compile "org.slf4j:slf4j-api:$versions.slf4j"
    compile "com.almworks.sqlite4java:sqlite4java:$versions.sqlite4java"
    compile "io.netty:netty-handler:$versions.netty"
    compile "io.reactivex:rxjava:$versions.rxjava"
}
