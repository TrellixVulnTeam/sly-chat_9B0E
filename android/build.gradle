buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$versions.androidGradle"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
        classpath "com.google.gms:google-services:$versions.googleServices"
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion versions.androidCompileSdk
    buildToolsVersion versions.androidBuildTools

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationIdSuffix '.debug'
        }
    }

    defaultConfig {
        applicationId 'io.slychat.messenger'
        minSdkVersion 19
        targetSdkVersion 25
        versionCode androidVersionCode
        versionName rootProject.version
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        debug.java.srcDirs += 'src/debug/kotlin'
//        main.assets.srcDirs += "$rootProject.projectDir/ui"
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        //no support for wildcards; so just ignore this one since it clashes
        exclude 'META-INF/core-compileKotlin.kotlin_module'
        exclude 'META-INF/io.netty.versions.properties'
        exclude 'META-INF/INDEX.LIST'
    }
}

android.applicationVariants.all { variant ->
    variant.outputs.each { output ->
        def apkName = "SlyChat-${rootProject.version}"

        apkName += '-' + variant.buildType.name

        if (!variant.isSigningReady())
            apkName += '-unsigned'

        output.outputFile = project.file("$project.buildDir/outputs/apk/${apkName}.apk")
    }
}

try {
    rootProject.file('keystore.properties').withInputStream {
        def keystoreProperties = new Properties()
        keystoreProperties.load(it)

        android {
            signingConfigs {
                release {
                    keyAlias keystoreProperties['keyAlias']
                    keyPassword keystoreProperties['keyPassword']
                    storeFile file(keystoreProperties['storeFile'])
                    storePassword keystoreProperties['storePassword']
                }
            }

            buildTypes {
                release {
                    signingConfig signingConfigs.release
                }
            }
        }
    }
}
catch (FileNotFoundException ignored) {
    logger.warn('No keystore.properties found, not setting release signing config')
}

dependencies {
    compile "com.android.support:appcompat-v7:$versions.appcompatv7"
    //pure-java curve25519 is broken: https://github.com/WhisperSystems/curve25519-java/pull/4
    compile "org.whispersystems:signal-protocol-android:$versions.libsignal"
    compile project(':core')
    compile project(':ui-services')
    compile project(':logger')
    compile "nl.komponents.kovenant:kovenant-android:$versions.kovenant"
    compile "io.reactivex:rxandroid:$versions.rxandroid"
    compile "com.jaredrummler:android-device-names:$versions.androidDeviceNames"
    compile "com.google.android.gms:play-services-gcm:$versions.playServices"
    compile "com.android.support:design:$versions.appcompatv7"
    compile "org.ocpsoft.prettytime:prettytime:$versions.prettyTime"

    //Added to prevent unresolved reference in IDEA
    compile "nl.komponents.kovenant:kovenant-functional:$versions.kovenant"
    compile "com.googlecode.libphonenumber:libphonenumber:$versions.libphonenumber"
    compile "com.almworks.sqlite4java:sqlite4java:$versions.sqlite4java"
    compile "org.slf4j:slf4j-api:$versions.slf4j"

    repositories {
        maven { url "https://dl.bintray.com/hani-momanii/maven"}
    }
    compile 'hani.momanii.supernova_emoji_library:supernova-emoji-library:0.0.2'

}

apply plugin: 'com.google.gms.google-services'
